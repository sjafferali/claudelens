# ClaudeLens Docker Compose Configuration
#
# IMPORTANT: This file contains default values for quick setup/demo.
# For production use, please:
# - Create a dedicated MongoDB user with limited privileges
# - Update MONGODB_URL to use the dedicated user instead of root
# - Update API_KEY with a secure generated key
# - Update MONGO_INITDB_ROOT_PASSWORD with a strong password
#
# To use different ports or values, copy this file and modify as needed.

version: '3.8'

services:
  claudelens:
    image: sjafferali/claudelens:latest
    container_name: claudelens
    restart: unless-stopped
    ports:
      - "3000:8080"
    environment:
      # MongoDB connection (using root user for simplicity in demo)
      - MONGODB_URL=mongodb://admin:changeme-use-strong-password-in-production@mongodb:27017/claudelens?authSource=admin

      # Security
      - API_KEY=default-api-key

      # Application settings
      - DEBUG=false

      # Database settings
      - DATABASE_NAME=claudelens

    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongodb:
    image: mongo:7.0
    container_name: claudelens_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: changeme-use-strong-password-in-production
      MONGO_INITDB_DATABASE: claudelens
    volumes:
      - mongodb_data:/data/db
    command: mongod --auth
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/claudelens --quiet
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  mongodb_data:
    name: claudelens_mongodb_data
